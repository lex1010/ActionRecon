name: "OWASP Amass Enum"
description: "Amass enum"
branding:
  icon: "eye"
  color: "gray-dark"


inputs:
  domains:
    description: "Domain names separated by commas (can be used multiple times)s"
    required: true
  
  passive:
    description: "Domain names separated by commas (can be used multiple times)"
    required: false
    default: false

  brute:
    description: "Execute brute forcing after searches"
    required: false
    default: false

  output:
    description: "Path to the text file containing terminal stdout/stderr"
    required: true
  
  ipv4:
    description: "Show the IPv4 addresses for discovered names"
    required: false
  
  htx:
    description: "Httpx request results"
    required: true

  
runs:
  using: "composite"
  steps:
    - run: |
        echo "::group::Install Amass and httpx with go get"
        [ ! -x /home/runner/go/bin/amass ] && go install -v github.com/OWASP/Amass/v3/...@master
        [ ! -x /home/runner/go/bin/amass ] && go install -v github.com/projectdiscovery/httpx/cmd/httpx@latest
        echo "/home/runner/go/bin/" >> $GITHUB_PATH
        echo "::endgroup::"
      shell: bash
    - run: |
        echo "::group::Setting up Amass parameters"
        ${{ inputs.passive }} && echo "amass-passive=-active" >> $GITHUB_ENV
        ${{ inputs.brute }} && echo "amass-brute=-brute" >> $GITHUB_ENV
        ${{ inputs.ipv4 }} && echo "amass-ipv4=-ipv4" >> $GITHUB_ENV
        [ ! -z ${{ inputs.htx }} ] && echo "httpx-output=-o ${{ inputs.htx }}" >> $GITHUB_ENV
        [ ! -z ${{ inputs.domains }} ] && echo "amass-domains=-d ${{ inputs.domains}}" >> $GITHUB_ENV
        [ ! -z ${{ inputs.output }} ] && echo "amass-output=-o ${{ inputs.output}}" >> $GITHUB_ENV
        echo "::endgroup::"
      shell: bash
    - run: |
        echo "::group::Running Amass..."
        amass enum \
          ${{ env.amass-passive }} \
          ${{ env.amass-ipv4 }} \
          ${{ env.amass-brute }} \
          ${{ env.amass-domains }} \
          ${{ env.amass-output }}
        echo "::endgroup::"
        echo "::group::Running Httpx..."
        cat ${{ inputs.output }} | httpx -o ${{ inputs.htx }}
        echo "::endgroup::"
      shell: bash
    
